{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "AmmannAngela_HechtLukas",
      "mod": 1704808971133,
      "code": "let credits = { \n    \"student_names\": \"Angela Ammann, Lukas Hecht\", \n    \"recode_title\": \" De La Serie (Des) Ordres\", \n    \"recode_year\": 1974, \n    \"recode_medium\": \"plotter drawing in ink on Benson plotter paper\", \n    \"recode_url\": \"https://spalterdigital.com/artworks/de-la-serie-des-ordres-2/\" \n} \n\nlet shapes = []\nlet minSquares = 8\nlet maxSquares = 15\nlet darkMode = false\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight)\n\tchooser()\n\tbuildGrid()\n}\n\nfunction draw() {\n\tbackgroundChooser()\n\trectMode(CENTER)\n\n\toffX = width / 2 - height / 2\n\ttranslate(offX, 0)\n\n\tfor(let i = 0; i < shapes.length; i++) {\n\t\tlet shapee = shapes[i]\n\t\ttouched = false;\n\t\tshapee.display()\n\t\tif(dist(mouseX - offX, mouseY, shapee.x, shapee.y) < halfSize) {\n\t\t\tif(!touched) {\n\t\t\t\tshapee.displayBlack()\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction mousePressed() {\n\tfor(let i = 0; i < shapes.length; i++) {\n\t\tlet shapee = shapes[i]\n\t\tif(dist(mouseX - offX, mouseY, shapee.x, shapee.y) < halfSize) {\n\t\t\tif(mouseIsPressed) {\n\t\t\t\tshapee.animateToggle = !shapee.animateToggle\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction backgroundChooser() {\n\tif(darkMode) {\n\t\tbackground(0)\n\t} else {\n\t\tbackground(245, 240, 230)\n\t}\n}\n\nfunction buildGrid() {\n\tsize = height / sliderSize.value()\n\thalfSize = size / 2\n\tshapes = []\n\tfor(let s = halfSize; s < height; s += height / sliderSize.value()) {\n\t\tfor(let t = halfSize; t < height; t += height / sliderSize.value()) {\n\t\t\tshapes.push(new DifferentSquares(s, t, height / sliderSize.value(), random(minSquares, maxSquares)))\n\t\t}\n\t}\n}\n\nfunction reset() {\n\tred.value(0)\n\tblue.value(0)\n\tgreen.value(0)\n\t\n\tif(darkMode) {\n\tdarkMode = false}\n\t\n\tfor(let s of shapes) {\n\t\ts.animateToggle = false\n\t}\n\t\n}\n\nfunction molnar() {\n\tsliderSize.value(17)\n\tif(darkMode) {\n\tdarkMode = false\n\t\t\t}\n\tred.value(0)\n\tblue.value(0)\n\tgreen.value(0)\n\tbuildGrid()\n}\n\nfunction randomM() {\n\tsliderSize.value(random(17))\n\tred.value(random(255))\n\tblue.value(random(255))\n\tgreen.value(random(255))\n\tbuildGrid()\n}\n\nfunction mode() {\n\tdarkMode = !darkMode\n\n\tif(darkMode){\n\t\tbuttonMode.html('LIGHT')\n\t}else{\n\t\tbuttonMode.html('DARK')\n\t\t\n\t}\n}\n\nclass DifferentSquares {\n\tconstructor(x, y, maxSize, randomNumber) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.sW = 1\n\t\tthis.maxSize = maxSize\n\t\tthis.numSquares = randomNumber\n\t\tthis.maxSquares = maxSquares\n\t\tthis.toggleOn()\n\t\tthis.animateToggle = false\n\t}\n\n\ttoggleOn() {\n\t\tthis.on = []\n\t\tfor(let i = 0; i < this.numSquares; i++) {\n\t\t\tthis.on.push(round(random(1)))\n\t\t}\n\t}\n\n\tdisplay() {\n\t\tif(this.animateToggle) {\n\t\t\tthis.toggleOn()\n\t\t}\n\n\t\tpush()\n\t\tstrokeWeight(this.sW)\n\t\tfor(let g = 0; g < this.numSquares; g++) {\n\t\t\tif(this.on[g]) {\n\t\t\t\tstroke(red.value(), green.value(), blue.value())\n\t\t\t\tif(darkMode) {\n\t\t\t\t\tstroke(245, 240, 230)\n\t\t\t\t\tif(this.animateToggle) {\n\t\t\t\t\t\tstroke(red.value(), green.value(), blue.value())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnoFill()\n\t\t\t\tsquare(this.x, this.y, this.maxSize - (this.maxSize / this.maxSquares) * g)\n\t\t\t}\n\t\t}\n\t\tpop()\n\t}\n\n\tdisplayBlack() {\n\t\tpush()\n\t\tstrokeWeight(3)\n\t\tfor(let g = 0; g < this.numSquares; g++) {\n\t\t\tif(this.on[g]) {\n\t\t\t\tstroke(0)\n\t\t\t\tif(darkMode) {\n\t\t\t\t\tstroke(red.value(), green.value(), blue.value())\n\n\t\t\t\t}\n\t\t\t\tnoFill()\n\t\t\t\tsquare(this.x, this.y, this.maxSize - (this.maxSize / this.maxSquares) * g * 2)\n\t\t\t}\n\t\t}\n\t\tpop()\n\t}\n}\n\n//chooser\nfunction chooser() {\n\tguiHolder = createDiv('').class('gui-holder')\n\tguiBar = createDiv('CHOOSER').parent(guiHolder).class('gui-bar').draggable(guiHolder)\n\tguiContent = createDiv('').parent(guiHolder).class('gui-content')\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('GRID').parent(guiItem).class('gui-label')\n\tsliderSize = createSlider(1, 17, 17, 1).parent(guiItem).class('gui-slider').input(buildGrid)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('RED').parent(guiItem).class('gui-label')\n\tif (darkMode){\n\tred = createSlider(0, 255, 245, 1).parent(guiItem).class('gui-slider')\n\t}\n\telse{\n\tred = createSlider(0, 255, 0, 1).parent(guiItem).class('gui-slider') //.input(buildGrid)\n\t}\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('GREEN').parent(guiItem).class('gui-label')\n\t\n\tif (darkMode){\n\tgreen = createSlider(0, 255, 240, 1).parent(guiItem).class('gui-slider')\n\t}\n\telse{\n\tgreen = createSlider(0, 255, 0, 1).parent(guiItem).class('gui-slider') //.input(buildGrid)\n\t}\n\tprint(darkMode)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('BLUE').parent(guiItem).class('gui-label')\n\tif (darkMode){\n\tblue = createSlider(0, 255, 230, 1).parent(guiItem).class('gui-slider')\n\t}\n\telse{\n\tblue = createSlider(0, 255, 0, 1).parent(guiItem).class('gui-slider') //.input(buildGrid)\n\t}\n\t\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateButton('MOLNAR').parent(guiItem).mousePressed(molnar).class('gui-molnar')\n\tcreateButton('RANDOM').parent(guiItem).mousePressed(randomM).class('gui-random')\n\tbuttonMode = createButton('DARK').parent(guiItem).mousePressed(mode).class('gui-mode')\n\tcreateButton('RESET').parent(guiItem).mousePressed(reset).class('gui-reset')\n\n\tcreateElement('style', `\n\t\t.gui-holder{\n\t\t\tposition:fixed;\n\t\t\tright:55px;\n\t\t\ttop:25px;\n\t\t\tbackground:rgba(0, 0, 0, .4);\n\t\t\twidth:225px;\n\t\t\tcolor:#fff;\n\t\t\tborder:1px solid #fff;\n\t\t\tfont-family:futura;\n\t\t}\n\t\t.gui-bar{\n\t\t\tcolor:#fff;\n\t\t\tborder-bottom:1px solid #fff\n\t\t\tmargin:5%;\n\t\t}\n\t\t.gui-content{\n\t\t\twidth:90%;\n\t\t\theight:100%\n\t\t\tmargin:5%;\n\t\t}\n\t\t.gui-slider{\n\t\t\twidth:95%;\n\t\t\t-webkit-appearance:none;\n\t\t\theight:3px;\n\t\t}\n\t\t.gui-slider::-webkit-slider-thumb{\n\t\t\t-webkit-appearance:none;\n\t\t\theight:15px;\n\t\t\twidth:15px;\n\t\t\tbackground: #ffffff;\n\t\t\tbox-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n\t\t}\n\t\t.gui-slider::-webkit-slider-runnable-track{\n\t\t\twidth:50%;\n\t\t\tcursor:pointer;\n\t\t\tbackground: #cc9c9c9;\n\t\t\tborder-radius:1px;\n\t\t}\n\t\t.gui-label{\n\t\t\n\t\t}\n\t\t.gui-item{\n\t\t\tborder-bottom:1px solid #fff;\n\t\t\tmargin-bottom:15px;\n\t\t\tpadding:5px;\n\t\t\t\n\t\t}\n\t\t.gui-item:hover{\n\t\t\tbackground:rgba(245, 240, 230, .4);\n\t\t\t\n\t\t}\n\t\t.gui-molnar{\n\t\t\theight:30px;\n\t\t\twidth:90px;\n\t\t\tfont-family:futura;\n\t\t\tmargin-right:5px;\n\t\t\tmargin-bottom:5px;\n\t\t\tpadding:5px;\n\t\t}\n\t\t.gui-random{\n\t\t\theight:30px;\n\t\t\twidth:90px;\n\t\t\tfont-family:futura;\n\t\t\tmargin-bottom:5px;\n\t\t}\n\t\t.gui-mode{\n\t\t\theight:30px;\n\t\t\twidth:90px;\n\t\t\tfont-family:futura;\n\t\t\tmargin-right:5px;\n\t\t\tmargin-bottom:5px;\n\t\t}\n\t\t.gui-reset{\n\t\t\theight:30px;\n\t\t\twidth:90px;\n\t\t\tfont-family:futura;\n\t\t}\n\t`)\n}\n"
    }
  ]
}