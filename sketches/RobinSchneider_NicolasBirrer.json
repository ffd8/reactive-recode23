{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "final ausgangslage_005",
      "mod": 1704808673762,
      "code": "let credits = {\n\t\"student_names\": \"Nicolas Birrer, Robin Schneider\",\n\t\"recode_title\": \"Hommage à Dürer 91 variations\",\n\t\"recode_year\": 1982,\n\t\"recode_medium\": \"Plotter drawing\",\n\t\"recode_url\": \"https://www.artsy.net/artwork/vera-molnar-hommage-a-durer-91-variations\"\n}\n\nlet x;\nlet y;\nlet p;\nlet molnargrid\nlet gap = 100\nlet size\nlet molnars = [];\nlet grosse\nvar grid\nlet zGrid\n\n\n\n\n//BEGINN SETUP\nfunction setup() {\n\tangleMode(DEGREES)\n\tcreateCanvas(windowWidth, windowHeight, WEBGL)\n\tsize = ((height * .4) / molnargrid)\n\tbuildGUI() //generate this first\n\n\tgenMolnar()\n}\n\n//END SETUP\n\n//number of molnar objects being created\nfunction genMolnar() {\n\n\tsize = sliderSize.value()\n\tgrid = sliderGrid.value()\n\tmolnargrid = sliderNumber.value()\n\tzGrid = sliderTiefe.value()\n\trandVar1 = sliderDicke.value() //standart wert\n\n\tmolnars = [];\n\tfor(let i = 0; i < molnargrid * molnargrid; i++) {\n\t\tlet m = new Molnar();\n\t\tmolnars.push(m);\n\t}\n}\n\n\n//BEGINN DRAW\nfunction draw() {\n\n\trotateY(sliderRotation.value())\n\n\tif(checkOrtho.checked()) {\n\t\tortho()\n\t} else {\n\t\tperspective()\n\t}\n\n\tif(checkAnimation.checked()) {\n\t\tanimation()\n\t}\n\n\tbackground(239, 239, 232);\n\t//reload()\n\tlet grosse = (molnargrid * (size + gap))\n\n\ttranslate(-grosse / 2, -grosse / 2) //zentrierung\n\n\t// walk through all molnars\n\tfunction animation() {\n\t\tvar molnarWalker = molnars[frameCount % molnars.length]\n\t\tmolnarWalker.coords[floor(random(molnarWalker.coords.length))].sw = random(3, 15)\n\t}\n\n\n\t//display all molnars\n\tvar count = 0;\n\tfor(let i = 0; i < molnargrid; i += 1) {\n\t\tfor(let j = 0; j < molnargrid; j += 1) {\n\t\t\tpush();\n\t\t\ttranslate(i * (size + gap), j * (size + gap)); //verteilung der molnar objekte auf das raster\n\t\t\tmolnars[count].display()\n\t\t\tpush()\n\t\t\tcount++\n\t\t\tpop()\n\t\t\ttranslate(grosse / 2, grosse / 2, size)\n\t\t\tpop()\n\t\t}\n\t}\n\n}\n\n\n\n// for (var i = 0; i < molnars.length; i++) {\n// \tfor (var j = 0; j < molnar.length; j++) {\n// \t\tfor (var ma1 = 0; ma1 < myArray.length; ma1++) {\n// \tprint()\n// }\n// }\n// }\n\n//END DRAW\n\n//BEGINN CLASSS\nclass Molnar {\n\tconstructor() {\n\t\tthis.coords = [];\n\t\tthis.w = size //Size of the molnar Objects\n\t\tthis.init()\n\t\tthis.sw\n\t}\n\tinit() {\n\t\tfor(let i = 0; i < grid; i++) {\n\t\t\tfor(let j = 0; j < grid; j++) {\n\t\t\t\tfor(var k = 0; k < zGrid; k++) {\n\t\t\t\t\tlet x = map(i, 0, grid - 1, 0, this.w);\n\t\t\t\t\tlet y = map(j, 0, grid - 1, 0, this.w);\n\t\t\t\t\tlet z = map(k, 0, grid - 1, 0, this.w) //random(-this.w / 2, this.w / 2)\n\t\t\t\t\tthis.coords.push({ //alle koords und rand strokeWeight in Array pushen\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\tz: z,\n\t\t\t\t\t\tsw: randVar1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.coords = shuffle(this.coords) //myArray contains 64 Objects a 25 coordinates\n\t}\n\n\n\tdisplay() {\n\t\tfor(let i = 0; i < this.coords.length - 1; i++) {\n\t\t\tlet maNow = this.coords[i]\n\t\t\tlet maNext = this.coords[i + 1]\n\t\t\tstrokeWeight(maNow.sw)\n\t\t\tline(maNow.x, maNow.y, maNow.z, maNext.x, maNext.y, maNext.z)\n\t\t\t//\tprint(molnars)\n\t\t}\n\t}\n\n\n}\n\n\n\n//END CLASS\n\nfunction randomGUI() {\n\tsliderSize.value(random(-200, 300))\n\tsliderGrid.value(random(2, 8))\n\tsliderNumber.value(random(1, 15))\n\tsliderTiefe.value(random(1, 8))\n\tgenMolnar()\n}\n\nfunction resetGUI() {\n\tsliderSize.value(-43)\n\tsliderGrid.value(4)\n\tsliderNumber.value(9)\n\tsliderTiefe.value(1)\n\tsliderDicke.value(1.3)\n\tsliderRotation.value(0)\n\tgenMolnar()\n}\nfunction invertCol(){\n\tbackground(0)\n\t\n}\n\n\n\n\nfunction buildGUI() {\n\tguiHolder = createDiv('').class('gui-holder')\n\tguiBar = createDiv('Settings').parent(guiHolder).class('gui-bar').draggable(guiHolder)\n\tguiContent = createDiv('').parent(guiHolder).class('gui-content')\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Grid').parent(guiItem).class('gui-label')\n\tsliderNumber = createSlider(1, 15, 9, 1).parent(guiItem).class('gui-slider').input(genMolnar)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Zoom').parent(guiItem).class('gui-label')\n\tsliderSize = createSlider(-200, 300, -43, .01).parent(guiItem).class('gui-slider').input(genMolnar)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Linien').parent(guiItem).class('gui-label')\n\tsliderGrid = createSlider(2, 8, 4, 1).parent(guiItem).class('gui-slider').input(genMolnar)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Tiefe').parent(guiItem).class('gui-label')\n\tsliderTiefe = createSlider(1, 8, 1, 1).parent(guiItem).class('gui-slider').input(genMolnar)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Rotation Y').parent(guiItem).class('gui-label')\n\tsliderRotation = createSlider(0, 360, 0, 1).parent(guiItem).class('gui-slider')\n\t\n\t\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Strich Dicke').parent(guiItem).class('gui-label')\n\tsliderDicke = createSlider(1, 10, 1.3, .1).parent(guiItem).class('gui-slider').input(genMolnar)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Isometrisch').parent(guiItem).class('gui-label')\n\tcheckOrtho = createCheckbox('', false).parent(guiItem).class('gui-slider').input(genMolnar)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item')\n\tcreateDiv('Stroke Animation').parent(guiItem).class('gui-label')\n\tcheckAnimation = createCheckbox('', false).parent(guiItem).class('gui-slider').input(genMolnar)\n\t\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item2')\n\tcreateButton('RANDOM').parent(guiItem).mousePressed(randomGUI)\n\n\tguiItem = createDiv('').parent(guiContent).class('gui-item2')\n\tcreateButton('Reset').parent(guiItem).mousePressed(resetGUI)\n\t\n\t\n\n\n\tcreateElement('style', `\n\t\t.gui-holder{\n\t\t\tposition:fixed;\n\t\t\tright:25px;\n\t\t\ttop:25px;\n\t\t\tbackground:rgba(0, 0, 0, .5);\n\t\t\tcolor:#fff;\n\t\t\tborder:1px solid #fff;\n\t\t\tfont-family:monospace;\n\t\t}\n\t\t.gui-bar{\n\t\t\tcolor:#fff;\n\t\t\tborder-bottom:1px solid #fff;\n\t\t\tpadding:5px;\n\t\t}\n\t\t.gui-content{\n\t\t\t// background:blue;\n\t\t\twidth:100%;\n\t\t\theight:100%;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t.gui-slider{\n\t\t\twidth:95%;\n\t\t}\n\t\t.gui-label{\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\t.gui-item{\n\t\t\tborder-bottom:1px solid #fff;\n\t\t\t// margin-bottom:15px;\n\t\t\tpadding:5px;\n\t\t}\n\t\t\n\t\t.gui-item2{\n\t\t\tborder-bottom:1px solid #fff;\n\t\t\t// margin-bottom:15px;\n\t\t\tpadding:5px;\n\t\t\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t.gui-item:hover{\n\t\t\tbackground:#333;\n\t\t\t\n\t\t}\n\t\tbutton {\n\t\t\tposition: absolut;\n\t\t}\n\t`)\n}"
    }
  ]
}